
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-login
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-login
  template:
    metadata:
      labels:
        editor: vscode
        app: auth-login
      name: Login 
    spec:
      containers:
      - name: auth-login-service
        image: rykan/auth-login
        imagePullPolicy: Never
        ports:
          - containerPort: 2000
# ---
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   name: postgres
# spec:
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: postgres
#     spec:
#       containers:
#         - name: postgres
#           image: postgres
#           imagePullPolicy: "IfNotPresent"
#           ports:
#             - containerPort: 5432
#           envFrom:
#             - configMapRef:
#                 name: postgres-config
#           volumeMounts:
#             - mountPath: "/var/lib/postgresql/data"
#               name: postgredb
#       volumes:
#         - name: postgredb
#           persistentVolumeClaim:
#             claimName: postgres-pv-claim
---
kind: Service
apiVersion: v1
metadata:
  name: auth-login-svc
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 2000
  selector:
    app: auth-login
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: auth-login-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: auth-login-svc
            servicePort: 80